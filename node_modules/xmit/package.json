{
  "name": "xmit",
  "version": "0.0.4",
  "description": "Basic Object Event dispatch class ",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bobbwhy/xmit.git"
  },
  "author": {
    "name": "Robert LaMarca",
    "email": "robertmlamarca@yahoo.com",
    "url": "http://www.northbylowereast.com/"
  },
  "license": "ISC",
  "devDependencies": {
    "xbrowser_debug": "0.0.2"
  },
  "readme": "\n** Xmit Javascript Event Broadcasting Framework.\n\n*This is still in development.  XmitAtom class using ChannelAtom is only one tested.*\n\nXmit is part of a library of modules I am working on called Seldon.  Seldon modules are intended to be more specific and customizable than existing full frameworks such as jquery.  To this end, Seldon modules will lean on the commonjs pattern and for the moment, browserify in order to compile these optimally for the web browser environment.\n\nMost Seldon modules will have multiple compile options to reduce the download size for any specific use.\n\nThere will be more about Seldon later.\n\nXmit is meant to handle events and observers using the basic syntax of the typical event/observer pattern.\n\nThis framework is different than most current ones in that it allows the author control over the methods by which the event is transmitted into the code.\n\nThe framework is also designed to allow the author to only include features and commands which are necessary to the end product.  It allows more specific require statements and that will help to minimize the code sent to the browser versus full libraries such as jquery.\n\nXmit will follow a basic hierarchical pattern.\n* \t-Xmit instance.\n* \t\t-Channel instances.\n* \t\t\t-Observer functions.\n\n*Xmit: \nThe event broadcasting object.  \nCurrently there are two xmitter objects available, XmitAtom and XmitThen.\nNeither has any validations.  Neither can remove listeners or channels.\n\nXmitThen, will return a promise when xmit is called in addition to broadcasting the usual event.\n\n\n*Channel: \nThe channel is an object that holds a series of listeners or events.  There are currently two channels available, ChannelAtom and ChannelXform.  Neither has any validations.  \n\nChannelAtom will run each of its listener functions in FIFO order, passing the message data to each one.\n\nChannelXform will also cycle through its listeners in LIFO order, and will only pass the message data to the first listener to be run ( the last one added with the on function). \n\nAll subsequent listeners will be passed the return value of the listenern that was run immediately previously.  This is akin to stacked decorator functions or to a reduce series that uses a different function for each iteration.\n\n\n*Listener: \na function that is added to a channel.\n\n\n\n**Future plans: \n- Adding functions to xmit via wrappers and factory functions.\n- Channels based on workers.\n- Channels based on sockets and network message passing.\n\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "942046e3f965f9eb043b833f648f8410ecbb7231",
  "bugs": {
    "url": "https://github.com/bobbwhy/xmit/issues"
  },
  "homepage": "https://github.com/bobbwhy/xmit",
  "_id": "xmit@0.0.4",
  "_shasum": "c08ebf9abc8ceecece5c2088dd27f262973664b4",
  "_from": "xmit@0.0.4"
}
