




require("dicey_debug").log;


function __Channel(name, context, motor) { 
	// motor does not exist really 

	var _ctx, _name, _listeners, _i = _i|0;


	function Channel(name, context) { 
		_name = this.name = name;
		_ctx = context;
		_listeners = [];
	}

	Channel.prototype = { 
		on:function(lambda, context) { 
			var ctx = context || _ctx;
			_listeners[_i++] = function(msg) { 
				lambda.call(_ctx, msg);
			}
			return this;
		},
		xmit:function(msg) { 
			var i = i|0, curr = msg;
			for ( ; i !== _i; i++) { 
				curr = _listeners[i](curr, msg);
			}
		},
		toString:function() { 
			return "XMIT CHANNEL REDUCE ATOM " + name
		}

	}

	return new Channel(name, context);
}

module.exports = __Channel;


