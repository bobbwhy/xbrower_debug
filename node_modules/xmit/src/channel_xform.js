
/** 
 * @class ChannelXform
 * 	A subclass of ChannelAtom... 
 * 	it is exactly like Channel.... except that 
 * 	when the listeners run each listener passes a new value
 * 	
 */

// var log = require("dicey_debug").log;

var Atom = require("./channel_atom")

function ChannelXform(name, context) { 
	this.init(name, context);
}

ChannelXform.prototype = Object.create(Atom.prototype);

ChannelXform.prototype.on = function(lambda, context) { 
	// prepend all listeners instead of append
	context = context||this;
	this._listeners.unshift(function(msg) { 
		return lambda.call(context, msg);
	});
	return this;
}

ChannelXform.prototype.xmit = function(msg) { 
	var _ls = this._listeners, _l = _ls.length, i = i|0;
	if (_l===0) return msg;
	if (_l===1) return _ls[0](msg);

	for ( ; i !== _l; i++ ) {
		msg = _ls[i](msg);
	}
	return msg;
} 

ChannelXform.prototype.toString = function() { 
	return "XMIT CHANNEL X FORM"
}


module.exports = ChannelXform;