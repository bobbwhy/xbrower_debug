
/** 
 * 	@class 
 * 	XmitThen.. extends XmitAtom.. and is similar except than 
 * 	combines a promise feature into this xmitter.
 * 	xmit now returns a promise in addition to the xmitting.
 */


var log = require("dicey_debug").log;
var Channel = require("./channel_atom"),
	Atom = require("./xmit_atom");


function XmitThen(context, name, channelType) { 
	this.init(context, name, channelType);
	// this._setupThen()
}



XmitThen.prototype = Object.create(Atom.prototype);
	
XmitThen.prototype.xmit = function(channel_name, msg) { 
	var channels = this._channels, channel;
	return new Promise(
		function(resolve, reject) { 
			if (channel_name in channels === false) return false; 
			msg = channels[channel_name].xmit(msg);
			try { 
				resolve(msg);	
			} catch(e) {reject()}
		}
	);
};

XmitThen.prototype.toString = function() {
	return "XMIT THEN "
}

module.exports = XmitThen;
